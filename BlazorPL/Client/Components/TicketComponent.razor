@using System.Net.Http
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@inject AuthenticationStateProvider AuthState
@inject NavigationManager uriHelper;

<MudCard Style="width:22.5%; margin-left:15px; margin-right:15px; margin-bottom:10px; padding:0px">
    <MudCardHeader Style="background-color:#f1f2f6">
        <CardHeaderContent>
            <a href="/event/@Id"><MudText Class="mt-1" Style="font-size:20px" Align="Align.Center">@EventName</MudText></a>
            <MudText Class="mt-1" Style="font-size:16px" Align="Align.Center">@_event.StartDate.ToShortDateString()</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>

        <MudGrid>
            <MudItem xs="3">
                <MudText Class="mt-1" Align="Align.Justify"><b>Kategória:</b></MudText>
            </MudItem>
            <MudItem xs="9">
                <MudText Class="mt-1" Align="Align.Right">@Category</MudText>
            </MudItem>
        </MudGrid>
        <MudGrid>
            <MudItem xs="6">
                <MudText Class="mt-1" Align="Align.Justify"><b>Ár:</b></MudText>
            </MudItem>
            <MudItem xs="6">
                <MudText Class="mt-1" Align="Align.Right">@Price</MudText>
            </MudItem>
        </MudGrid>
        <MudGrid>
            <MudItem xs="6">
                <MudText Class="mt-1" Align="Align.Justify"><b>Készleten:</b></MudText>
            </MudItem>
            <MudItem xs="6">
                <MudText Class="mt-1" Align="Align.Right">@InStock</MudText>
            </MudItem>
        </MudGrid>
    </MudCardContent>
    <MudPaper Style="display:flex; justify-content:center; width:100%; background-color: #2ed573">
        <MudIconButton Icon="@Icons.Material.Filled.ShoppingCart" Color="Color.Default" @onclick="ToCart" />
    </MudPaper>
</MudCard>

@code {
    #region Paraméterek

    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public string Category { get; set; }
    [Parameter]
    public string EventName { get; set; }
    [Parameter]
    public int Price { get; set; }
    [Parameter]
    public int InStock { get; set; }
    [Parameter]
    public int EventId { get; set; }

    EventDto _event = new EventDto();

    HttpClient http { get; set; }

    #endregion

    protected override async Task OnInitializedAsync()
    {
        http = HttpClientFactory.CreateClient("BlazorPL.PublicServerAPI");
        _event = await http.GetFromJsonAsync<EventDto>($"api/events/{EventId}");
    }

    public async Task ToCart()
    {
        var auth = await AuthState.GetAuthenticationStateAsync();
        var claimsPrincipal = auth.User;
        var userId = claimsPrincipal.FindFirst(x => x.Type.Equals("sub")).Value;
        await http.PostAsJsonAsync($"api/users/ticket-to-cart?ticketid={Id}&&userid={userId}", _event);
    }
}
